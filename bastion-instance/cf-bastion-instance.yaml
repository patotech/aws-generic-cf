AWSTemplateFormatVersion: '2010-09-09'
Description: Generic CF - Bastion Instance

## ############################################################################
## This file defines a generic bastion instance that can be used for demo 
## or laboratory purposes in AWS. 
##
## Version : 1.0.0
## Date    : 25-05-2019
## Author  : Patricio TÃ©llez (ptellez@amazon.com)
## ############################################################################

## ############################################################################
## Parameters
## ############################################################################
Parameters: 
  # VPC name for bastion
  VpcName:
    Type: String
    Description: Specify the VPC name as visible in the console
    Default: cftools-vpc-bastion
  
  # Main VPC CIDR
  VpcCidr:
    Type: String
    Description: Specify the CIDR for the bastion VPC
    Default: 10.0.0.0/16

  # Bastion Host specific info
  BastionSubnetAz:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: | 
      Specify the subnet in wich the bastion host for is going to be present.
    
  S3KeyPairBucketName:
    Type: String
    Description: Name of the bucket where the private key is going to be placed

## ############################################################################
## Resources
## ############################################################################
Resources:
  ## ##########################################################################
  ## Resources - IAM
  ## ##########################################################################
  # Bastion Instance Full Admin
  BastionInstanceAdminRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  ## ##########################################################################
  ## Resources - Networking
  ## ##########################################################################
  ## 
  ## VPC Definition
  ##
  # VPC for the bastion server
  BastionVpc:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Ref VpcName
  
  ## 
  ## Subnets
  ##
  # Public subnet for the bastion host
  BastionSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: BastionVpc
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt BastionVpc.CidrBlock, 6, 8 ] ]
      AvailabilityZone: us-east-1a
      Tags:
      - Key: Name
        Value: Bastion Subnet

  ## 
  ## Security Groups
  ##
  # Bastion security group
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from Internet to instance using SSH
      VpcId:
        Ref: BastionVpc
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: Bastion Security Group

  ## 
  ## VPC Gateways
  ##
  # Internet Gateway
  BastionInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: Bastion Internet Gateway    

  # Internet Gateway Attachment to the VPC
  BastionInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref BastionInternetGateway
      VpcId: !Ref BastionVpc

  # Public Subnet Route Table 
  BastionSubNetInternetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: BastionVpc
      Tags:
      - Key: Name
        Value: Internet Route Table

  # Public Internet Route
  BastionRoutePublicInternet:
    Type: AWS::EC2::Route
    DependsOn: BastionInternetGateway
    Properties:
      RouteTableId:
        Ref: BastionSubNetInternetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: BastionInternetGateway

  # Bastion Subnet Internet Route
  BastionSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: BastionSubnet
      RouteTableId:
        Ref: BastionSubNetInternetRouteTable        

  ## ##########################################################################
  ## Resources - EC2
  ## ##########################################################################
  # EC2 Instance Profile - IAM
  BastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: BastionInstanceAdminRole
    Properties:
      InstanceProfileName: BastionInstanceProfile
      Path: /
      Roles:
      - Ref: BastionInstanceAdminRole

  # EC2 Instance for the Bastion Instance
  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c6b1d09930fac512
      KeyName: win-home-key-pair-studio
      InstanceType: t3.micro
      IamInstanceProfile: !Ref BastionInstanceProfile
      BlockDeviceMappings: 
        - DeviceName: /dev/xvdb
          Ebs: 
            VolumeType: gp2
            DeleteOnTermination: true
            VolumeSize: 40
        - DeviceName: /dev/sdk
          NoDevice: {}
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: 0
          GroupSet:
          - Ref: BastionSecurityGroup
          SubnetId:
            Ref: BastionSubnet
      UserData:
        Fn::Base64: !Sub 
          - |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
              sudo yum -y update
              sudo yum install -y wget
              sudo wget https://raw.githubusercontent.com/patotech/aws-ewf/master/aws-demo-app-cloudformation/lab-1/mount-devices.sh
              sudo chmod u+x mount-devices.sh
              sudo ./mount-devices.sh
              sudo mkdir -p /mnt/data/work
              sudo chown -R ec2-user:ec2-user /mnt/data/work
              cd /mnt/data/work
              ssh-keygen -t rsa -b 4096 -f /mnt/data/work/id_rsa -q -N ""
              mv id_rsa /home/ec2-user/.ssh/
              chmod 400 /home/ec2-user/.ssh/id_rsa
              cat id_rsa.pub >> /home/ec2-user/.ssh/authorized_keys
              aws s3 cp /home/ec2-user/.ssh/id_rsa s3://${S3_BUCKET_NAME}
              aws ec2 import-key-pair --key-name "bastion-key" --public-key-material file://./id_rsa.pub
          - {
              S3_BUCKET_NAME: !Ref S3KeyPairBucketName
          }
      Tags:
      - Key: Name
        Value: Bastion Instance

  ## ##########################################################################
  ## Resources - S3
  ## ##########################################################################
  # Shared S3 bucket for Code Pipeline deployments
  BastionKeyS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Ref S3KeyPairBucketName
      Tags:
      - Key: Name
        Value: S3 Bucket for Keypair